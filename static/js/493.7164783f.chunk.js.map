{"version":3,"file":"static/js/493.7164783f.chunk.js","mappings":"+SAEaA,EAAiB,mCAAG,oGACZC,EAAAA,EAAAA,IAAA,6TADY,cACzBC,EADyB,yBAIxBA,GAJwB,2CAAH,qDAOjBC,EAAe,mCAAG,WAAMC,GAAN,uFACVH,EAAAA,EAAAA,IAAA,oUAC4SG,IAFlS,cACvBF,EADuB,yBAItBA,GAJsB,2CAAH,sDAM5BC,EAAgB,SAASE,MAAK,SAAAH,GAAI,OAAII,QAAQC,IAAIL,EAAhB,IAE3B,IAAMM,EAAgB,mCAAG,WAAMC,GAAN,uFACXR,EAAAA,EAAAA,IAAA,6CACqBQ,EADrB,+QADW,cACxBP,EADwB,yBAIvBA,GAJuB,2CAAH,sDAQhBQ,EAAgB,mCAAG,WAAMD,GAAN,uFACXR,EAAAA,EAAAA,IAAA,6CACqBQ,EADrB,uRADW,cACxBP,EADwB,yBAIvBA,GAJuB,2CAAH,sDAOhBS,EAAgB,mCAAG,WAAMF,GAAN,uFACXR,EAAAA,EAAAA,IAAA,6CACqBQ,EADrB,uRADW,cACxBP,EADwB,yBAIvBA,GAJuB,2CAAH,qD,8ECmB7B,UA/Ca,WACX,OAAwBU,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAaR,OAVAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GACoBH,GACjBV,MAAK,SAAAH,GACJY,EAAQZ,EAAKA,KAAKW,KACnB,IACAM,OAAM,SAAAC,GAAC,OAAId,QAAQC,IAAIa,EAAhB,GAEX,GAAE,CAACL,KAGF,wBACGF,GACCA,EAAKQ,KAAI,SAAAC,GAAE,OACT,gBAEEC,MAAO,CACLC,OAAQ,QACRC,UAAW,OACXC,QAAS,OACTC,OAAQ,OACRC,QAAS,eACTC,MAAO,QACPC,OAAQ,SATZ,WAYE,gBACED,MAAO,IACPE,IACET,EAAGU,aAAH,yCACsCV,EAAGU,cACrC,uFAENC,IAAI,MAEN,wBAAKX,EAAGY,QACR,uCAAeZ,EAAGa,eArBbb,EAAGc,GAFD,KA4BlB,C","sources":["components/api.js","pages/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n// Тренды\nexport const getTrendingMovies = async () => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=2105b7aaa5e5e75ccc7797a3d78c360e&access_token=eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMTA1YjdhYWE1ZTVlNzVjY2M3Nzk3YTNkNzhjMzYwZSIsInN1YiI6IjY0ODQ0ZGZkZDJiMjA5MDBjYTFmMGNhZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9I-Q5JNBmL7uanr9Yy2cXFJKfT8QdxGP3W3Xd1CZ0XA`\n  );\n  return data;\n};\n// Поиск\nexport const getSearchMovies = async query => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=2105b7aaa5e5e75ccc7797a3d78c360e&access_token=eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMTA1YjdhYWE1ZTVlNzVjY2M3Nzk3YTNkNzhjMzYwZSIsInN1YiI6IjY0ODQ0ZGZkZDJiMjA5MDBjYTFmMGNhZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9I-Q5JNBmL7uanr9Yy2cXFJKfT8QdxGP3W3Xd1CZ0XA&query=${query}`\n  );\n  return data;\n};\ngetSearchMovies('flash').then(data => console.log(data));\n// Инфо фильм\nexport const getDetailsMovies = async movie_id => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}?api_key=2105b7aaa5e5e75ccc7797a3d78c360e&access_token=eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMTA1YjdhYWE1ZTVlNzVjY2M3Nzk3YTNkNzhjMzYwZSIsInN1YiI6IjY0ODQ0ZGZkZDJiMjA5MDBjYTFmMGNhZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9I-Q5JNBmL7uanr9Yy2cXFJKfT8QdxGP3W3Xd1CZ0XA`\n  );\n  return data;\n};\n\n// Актёры\nexport const getCreditsMovies = async movie_id => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}/credits?api_key=2105b7aaa5e5e75ccc7797a3d78c360e&access_token=eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMTA1YjdhYWE1ZTVlNzVjY2M3Nzk3YTNkNzhjMzYwZSIsInN1YiI6IjY0ODQ0ZGZkZDJiMjA5MDBjYTFmMGNhZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9I-Q5JNBmL7uanr9Yy2cXFJKfT8QdxGP3W3Xd1CZ0XA`\n  );\n  return data;\n};\n// Обзоры\nexport const getReviewsMovies = async movie_id => {\n  const data = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movie_id}/reviews?api_key=2105b7aaa5e5e75ccc7797a3d78c360e&access_token=eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIyMTA1YjdhYWE1ZTVlNzVjY2M3Nzk3YTNkNzhjMzYwZSIsInN1YiI6IjY0ODQ0ZGZkZDJiMjA5MDBjYTFmMGNhZSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.9I-Q5JNBmL7uanr9Yy2cXFJKfT8QdxGP3W3Xd1CZ0XA`\n  );\n  return data;\n};\n","import React, { useEffect, useState } from 'react';\nimport * as api from '../components/api';\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n  const [cast, setCast] = useState('');\n  const { movieId } = useParams();\n  // console.log(cast);\n\n  useEffect(() => {\n    api\n      .getCreditsMovies(movieId)\n      .then(data => {\n        setCast(data.data.cast);\n      })\n      .catch(e => console.log(e));\n    // console.log(movieId);\n  }, [movieId]);\n\n  return (\n    <ul>\n      {cast &&\n        cast.map(el => (\n          <li\n            key={el.id}\n            style={{\n              border: 'solid',\n              listStyle: 'none',\n              padding: '10px',\n              margin: '10px',\n              display: 'inline-block',\n              width: '250px',\n              height: '250px',\n            }}\n          >\n            <img\n              width={100}\n              src={\n                el.profile_path\n                  ? `https://image.tmdb.org/t/p/w500${el.profile_path}`\n                  : 'https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png'\n              }\n              alt=\"\"\n            />\n            <h3>{el.name}</h3>\n            <p>Character: {el.character}</p>\n          </li>\n        ))}\n    </ul>\n  );\n};\nexport default Cast;\n"],"names":["getTrendingMovies","axios","data","getSearchMovies","query","then","console","log","getDetailsMovies","movie_id","getCreditsMovies","getReviewsMovies","useState","cast","setCast","movieId","useParams","useEffect","api","catch","e","map","el","style","border","listStyle","padding","margin","display","width","height","src","profile_path","alt","name","character","id"],"sourceRoot":""}